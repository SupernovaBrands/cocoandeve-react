{"version":3,"file":"static/js/913.6c80b496.chunk.js","mappings":"kQAGIA,EAAQ,CACRA,MAAO,KACPC,MAAO,OAGLC,EAAe,SAACC,EAAOC,GASzB,MARoB,gBAAhBA,EAAOC,OACPL,EAAMA,MAAQI,EAAOE,aAGL,gBAAhBF,EAAOC,OACPL,EAAMC,MAAQG,EAAOE,aAGlBN,GA2BX,EAxBsB,SAAAO,GAElB,OAA0CC,EAAAA,EAAAA,YAAWN,EAAcF,GAAnE,eAAOS,EAAP,KAAmBC,EAAnB,KAYMC,GAAY,kBAAQF,GAAR,IAAoBG,YAXX,SAACC,GACxBC,QAAQC,IAAI,MAAOF,GACnB,IAAMb,EAAQ,CAAC,KAAM,KAAM,MAAMgB,SAASH,GAAeA,EAAc,KACvEH,EAAoB,CAACL,KAAM,cAAeC,YAAaN,KAQYiB,YAL5C,SAAChB,GACxBa,QAAQC,IAAI,KAAMd,GAClBS,EAAoB,CAACL,KAAM,cAAeC,YAAaL,OAM3D,OACI,SAAC,aAAD,CAAuBiB,MAAOP,EAA9B,SACKJ,EAAMY,Y,wCCpBbC,GAASC,EAAAA,EAAAA,OAAK,kBAAM,iCACpBC,GAAeD,EAAAA,EAAAA,OAAK,kBAAM,yDAC1BE,GAAeF,EAAAA,EAAAA,OAAK,kBAAM,iCAC1BG,GAAaH,EAAAA,EAAAA,OAAK,kBAAM,iCACxBI,GAAiBJ,EAAAA,EAAAA,OAAK,kBAAM,gCA4BlC,EA1BiB,WACb,OACI,UAACK,EAAA,EAAD,YACI,SAACC,EAAA,EAAD,CAAa1B,MAAM,SACnB,SAAC,EAAD,WACI,SAAC2B,EAAA,EAAD,CAAe3B,MAAM,WAEzB,UAAC,EAAA4B,SAAD,CAAUC,UAAU,mBAApB,WACI,SAACR,EAAD,CAAcrB,MAAM,SACpB,SAAC8B,EAAA,EAAD,WACI,SAACP,EAAD,CAAYvB,MAAM,WAEtB,SAAC+B,EAAA,EAAD,WACI,SAACZ,EAAD,CAAQnB,MAAM,WAElB,SAACgC,EAAA,EAAD,WACI,SAACV,EAAD,CAActB,MAAM,WAExB,SAACiC,EAAA,EAAD,WACI,SAACT,EAAD,CAAgBxB,MAAM","sources":["store/StoreProvider.js","UI/templates/TanRange.js"],"sourcesContent":["import { useReducer } from \"react\";\nimport StoreContext from \"./store-context\";\n\nlet store = {\n    store: 'us',\n    range: 'tan',\n}\n\nconst storeReducer = (state, action) => {\n    if (action.type === 'CHANGESTORE') {\n        store.store = action.changeValue\n    }\n\n    if (action.type === 'CHANGERANGE') {\n        store.range = action.changeValue\n    }\n\n    return store;\n};\n\nconst StoreProvider = props => {\n    \n    const [storeState, dispatchStoreAction] = useReducer(storeReducer, store);\n    const storeChangeHandler = (activeStore) => {\n        console.log('sss', activeStore)\n        const store = ['us', 'fr', 'de'].includes(activeStore) ? activeStore : 'us';\n        dispatchStoreAction({type: 'CHANGESTORE', changeValue: store})\n    };\n\n    const rangeChangeHandler = (range) => {\n        console.log('dd', range)\n        dispatchStoreAction({type: 'CHANGERANGE', changeValue: range})\n    };\n\n    const storeContext = { ...storeState, storeChange: storeChangeHandler, rangeChange: rangeChangeHandler };\n\n\n    return (\n        <StoreContext.Provider value={storeContext}>\n            {props.children}\n        </StoreContext.Provider>\n    );\n};\n\nexport default StoreProvider;\n","import React, { lazy, Suspense } from 'react';\n\nimport RangeBanner from \"../sections/RangeBanner\";\nimport '../../range.scss';\nimport RangeCarousel from \"../sections/RangeCarousel\";\nimport RangeProvider from \"../../store/RangeProvider\";\nimport StoreProvider from \"../../store/StoreProvider\";\nimport IRLProvider from '../../store/IRLProvider';\nimport FaqProvider from '../../store/FaqProvider';\nimport ReviewProvider from '../../store/ReviewProvider';\nimport ProductProvider from '../../store/ProductProvider';\n// import ProductForm from '../sections/ProductForm';\n// import RangeFormula from \"../sections/RangeFormula\";\n// import FaqAccordion from \"../sections/FaqAccordion\";\n// import SectionIRL from \"../sections/SectionIRL\";\n// import SeenIn from \"../sections/SeenIn\";\n// import CustomerReview from \"../sections/CustomerReview\";\n\n// const RangeCarousel = lazy(() => import('../sections/RangeCarousel'));\nconst SeenIn = lazy(() => import('../sections/SeenIn'));\nconst RangeFormula = lazy(() => import('../sections/RangeFormula'));\nconst FaqAccordion = lazy(() => import('../sections/FaqAccordion'));\nconst SectionIRL = lazy(() => import('../sections/SectionIRL'));\nconst CustomerReview = lazy(() => import('../sections/CustomerReview'));\n\nconst TanRange = () => {\n    return (\n        <RangeProvider>\n            <RangeBanner range='tan' />\n            <StoreProvider>\n                <RangeCarousel range='tan' />\n            </StoreProvider>\n            <Suspense fallback={<div></div>}>\n                <RangeFormula range=\"tan\" />\n                <IRLProvider>\n                    <SectionIRL range=\"tan\" />\n                </IRLProvider>\n                <ProductProvider>\n                    <SeenIn range=\"tan\" />\n                </ProductProvider>\n                <FaqProvider>\n                    <FaqAccordion range=\"tan\" />\n                </FaqProvider>\n                <ReviewProvider>\n                    <CustomerReview range=\"tan\" />\n                </ ReviewProvider>\n                {/* <ProductForm /> */}\n            </Suspense>\n        </RangeProvider>\n    )\n};\nexport default TanRange\n"],"names":["store","range","storeReducer","state","action","type","changeValue","props","useReducer","storeState","dispatchStoreAction","storeContext","storeChange","activeStore","console","log","includes","rangeChange","value","children","SeenIn","lazy","RangeFormula","FaqAccordion","SectionIRL","CustomerReview","RangeProvider","RangeBanner","RangeCarousel","Suspense","fallback","IRLProvider","ProductProvider","FaqProvider","ReviewProvider"],"sourceRoot":""}